//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class AudioMatcher {

    static Entitas.IMatcher<AudioEntity> _matcherSettingsController;

    public static Entitas.IMatcher<AudioEntity> SettingsController {
        get {
            if (_matcherSettingsController == null) {
                var matcher = (Entitas.Matcher<AudioEntity>)Entitas.Matcher<AudioEntity>.AllOf(AudioComponentsLookup.SettingsController);
                matcher.componentNames = AudioComponentsLookup.componentNames;
                _matcherSettingsController = matcher;
            }

            return _matcherSettingsController;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AudioEntity {

    public Code.Audios.Audio.SettingsControllerComponent settingsController { get { return (Code.Audios.Audio.SettingsControllerComponent)GetComponent(AudioComponentsLookup.SettingsController); } }
    public Code.Meta.UI.HUD.SettingsWindow.ISettingsController SettingsController { get { return settingsController.Value; } }
    public bool hasSettingsController { get { return HasComponent(AudioComponentsLookup.SettingsController); } }

    public AudioEntity AddSettingsController(Code.Meta.UI.HUD.SettingsWindow.ISettingsController newValue) {
        var index = AudioComponentsLookup.SettingsController;
        var component = (Code.Audios.Audio.SettingsControllerComponent)CreateComponent(index, typeof(Code.Audios.Audio.SettingsControllerComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public AudioEntity ReplaceSettingsController(Code.Meta.UI.HUD.SettingsWindow.ISettingsController newValue) {
        var index = AudioComponentsLookup.SettingsController;
        var component = (Code.Audios.Audio.SettingsControllerComponent)CreateComponent(index, typeof(Code.Audios.Audio.SettingsControllerComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public AudioEntity RemoveSettingsController() {
        RemoveComponent(AudioComponentsLookup.SettingsController);
        return this;
    }
}
