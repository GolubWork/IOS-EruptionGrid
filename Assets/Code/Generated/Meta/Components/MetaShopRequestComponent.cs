//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherShopRequest;

    public static Entitas.IMatcher<MetaEntity> ShopRequest {
        get {
            if (_matcherShopRequest == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.ShopRequest);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherShopRequest = matcher;
            }

            return _matcherShopRequest;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    static readonly Code.Meta.Shop.ShopRequest shopRequestComponent = new Code.Meta.Shop.ShopRequest();

    public bool isShopRequest {
        get { return HasComponent(MetaComponentsLookup.ShopRequest); }
        set {
            if (value != isShopRequest) {
                var index = MetaComponentsLookup.ShopRequest;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : shopRequestComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}
