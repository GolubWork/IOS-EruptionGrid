//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherLevelsStorage;

    public static Entitas.IMatcher<MetaEntity> LevelsStorage {
        get {
            if (_matcherLevelsStorage == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.LevelsStorage);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherLevelsStorage = matcher;
            }

            return _matcherLevelsStorage;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public Code.Meta.Levels.LevelsStorage levelsStorage { get { return (Code.Meta.Levels.LevelsStorage)GetComponent(MetaComponentsLookup.LevelsStorage); } }
    public System.Collections.Generic.List<Code.Meta.Levels.Configs.LevelData> LevelsStorage { get { return levelsStorage.Value; } }
    public bool hasLevelsStorage { get { return HasComponent(MetaComponentsLookup.LevelsStorage); } }

    public MetaEntity AddLevelsStorage(System.Collections.Generic.List<Code.Meta.Levels.Configs.LevelData> newValue) {
        var index = MetaComponentsLookup.LevelsStorage;
        var component = (Code.Meta.Levels.LevelsStorage)CreateComponent(index, typeof(Code.Meta.Levels.LevelsStorage));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public MetaEntity ReplaceLevelsStorage(System.Collections.Generic.List<Code.Meta.Levels.Configs.LevelData> newValue) {
        var index = MetaComponentsLookup.LevelsStorage;
        var component = (Code.Meta.Levels.LevelsStorage)CreateComponent(index, typeof(Code.Meta.Levels.LevelsStorage));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public MetaEntity RemoveLevelsStorage() {
        RemoveComponent(MetaComponentsLookup.LevelsStorage);
        return this;
    }
}
