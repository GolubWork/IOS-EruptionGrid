//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCardSpriteRenderer;

    public static Entitas.IMatcher<GameEntity> CardSpriteRenderer {
        get {
            if (_matcherCardSpriteRenderer == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CardSpriteRenderer);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCardSpriteRenderer = matcher;
            }

            return _matcherCardSpriteRenderer;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Cards.CardSpriteRenderer cardSpriteRenderer { get { return (Code.Gameplay.Cards.CardSpriteRenderer)GetComponent(GameComponentsLookup.CardSpriteRenderer); } }
    public UnityEngine.SpriteRenderer CardSpriteRenderer { get { return cardSpriteRenderer.Value; } }
    public bool hasCardSpriteRenderer { get { return HasComponent(GameComponentsLookup.CardSpriteRenderer); } }

    public GameEntity AddCardSpriteRenderer(UnityEngine.SpriteRenderer newValue) {
        var index = GameComponentsLookup.CardSpriteRenderer;
        var component = (Code.Gameplay.Cards.CardSpriteRenderer)CreateComponent(index, typeof(Code.Gameplay.Cards.CardSpriteRenderer));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCardSpriteRenderer(UnityEngine.SpriteRenderer newValue) {
        var index = GameComponentsLookup.CardSpriteRenderer;
        var component = (Code.Gameplay.Cards.CardSpriteRenderer)CreateComponent(index, typeof(Code.Gameplay.Cards.CardSpriteRenderer));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCardSpriteRenderer() {
        RemoveComponent(GameComponentsLookup.CardSpriteRenderer);
        return this;
    }
}
