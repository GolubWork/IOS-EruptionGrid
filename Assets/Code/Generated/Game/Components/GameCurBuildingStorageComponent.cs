//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCurBuildingStorage;

    public static Entitas.IMatcher<GameEntity> CurBuildingStorage {
        get {
            if (_matcherCurBuildingStorage == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CurBuildingStorage);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCurBuildingStorage = matcher;
            }

            return _matcherCurBuildingStorage;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Buildings.CurBuildingStorage curBuildingStorage { get { return (Code.Gameplay.Buildings.CurBuildingStorage)GetComponent(GameComponentsLookup.CurBuildingStorage); } }
    public int CurBuildingStorage { get { return curBuildingStorage.Value; } }
    public bool hasCurBuildingStorage { get { return HasComponent(GameComponentsLookup.CurBuildingStorage); } }

    public GameEntity AddCurBuildingStorage(int newValue) {
        var index = GameComponentsLookup.CurBuildingStorage;
        var component = (Code.Gameplay.Buildings.CurBuildingStorage)CreateComponent(index, typeof(Code.Gameplay.Buildings.CurBuildingStorage));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCurBuildingStorage(int newValue) {
        var index = GameComponentsLookup.CurBuildingStorage;
        var component = (Code.Gameplay.Buildings.CurBuildingStorage)CreateComponent(index, typeof(Code.Gameplay.Buildings.CurBuildingStorage));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCurBuildingStorage() {
        RemoveComponent(GameComponentsLookup.CurBuildingStorage);
        return this;
    }
}
