//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherProducingItemsTypeId;

    public static Entitas.IMatcher<GameEntity> ProducingItemsTypeId {
        get {
            if (_matcherProducingItemsTypeId == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ProducingItemsTypeId);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherProducingItemsTypeId = matcher;
            }

            return _matcherProducingItemsTypeId;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Buildings.ProducingItemsTypeId producingItemsTypeId { get { return (Code.Gameplay.Buildings.ProducingItemsTypeId)GetComponent(GameComponentsLookup.ProducingItemsTypeId); } }
    public Code.Gameplay.Items.Configs.ProducingItemTypeId[] ProducingItemsTypeId { get { return producingItemsTypeId.Value; } }
    public bool hasProducingItemsTypeId { get { return HasComponent(GameComponentsLookup.ProducingItemsTypeId); } }

    public GameEntity AddProducingItemsTypeId(Code.Gameplay.Items.Configs.ProducingItemTypeId[] newValue) {
        var index = GameComponentsLookup.ProducingItemsTypeId;
        var component = (Code.Gameplay.Buildings.ProducingItemsTypeId)CreateComponent(index, typeof(Code.Gameplay.Buildings.ProducingItemsTypeId));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceProducingItemsTypeId(Code.Gameplay.Items.Configs.ProducingItemTypeId[] newValue) {
        var index = GameComponentsLookup.ProducingItemsTypeId;
        var component = (Code.Gameplay.Buildings.ProducingItemsTypeId)CreateComponent(index, typeof(Code.Gameplay.Buildings.ProducingItemsTypeId));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveProducingItemsTypeId() {
        RemoveComponent(GameComponentsLookup.ProducingItemsTypeId);
        return this;
    }
}
