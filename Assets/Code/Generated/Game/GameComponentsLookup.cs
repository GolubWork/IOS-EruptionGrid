//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Destructed = 0;
    public const int Persistent = 1;
    public const int SelfDestructTimer = 2;
    public const int ConveyourBeltItem = 3;
    public const int CurrentLerp = 4;
    public const int Distance = 5;
    public const int EndPoint = 6;
    public const int ItemSpacing = 7;
    public const int ReachedEnd = 8;
    public const int StartPoint = 9;
    public const int AbilityId = 10;
    public const int CollisionEffect = 11;
    public const int GarlicAuraAbility = 12;
    public const int OrbitingMushroomAbility = 13;
    public const int ParentAbility = 14;
    public const int RecreatedOnUpgrade = 15;
    public const int UpgradeRequest = 16;
    public const int VegetableBoltAbility = 17;
    public const int Armament = 18;
    public const int EffectSetups = 19;
    public const int FollowingProducer = 20;
    public const int StatusSetups = 21;
    public const int TargetLimit = 22;
    public const int Background = 23;
    public const int Canvas = 24;
    public const int Bucket = 25;
    public const int Building = 26;
    public const int BuildingTypeId = 27;
    public const int CurBuildingStorage = 28;
    public const int MaxBuildingStorage = 29;
    public const int ProducingItemsTypeId = 30;
    public const int ProducingSpeed = 31;
    public const int RecievingItemsTypeId = 32;
    public const int BorderCamera = 33;
    public const int Camera = 34;
    public const int EdgeCollider2D = 35;
    public const int MainCamera = 36;
    public const int Card = 37;
    public const int CardBackisActive = 38;
    public const int CardSpriteRenderer = 39;
    public const int CardTypeId = 40;
    public const int FaceUp = 41;
    public const int Flipping = 42;
    public const int ReadyToCheck = 43;
    public const int RequireSpriteSet = 44;
    public const int ReturningCard = 45;
    public const int BaseStats = 46;
    public const int StatChange = 47;
    public const int StatModifiers = 48;
    public const int Chicken = 49;
    public const int Collectable = 50;
    public const int Collected = 51;
    public const int CollectEffect = 52;
    public const int Active = 53;
    public const int Damage = 54;
    public const int EntityLink = 55;
    public const int Id = 56;
    public const int Inactive = 57;
    public const int Initialized = 58;
    public const int MeshRenderer = 59;
    public const int SpriteRenderer = 60;
    public const int Transform = 61;
    public const int WorldPosition = 62;
    public const int ConveyorBelt = 63;
    public const int ConveyorBeltSpeed = 64;
    public const int ConveyourItemsIds = 65;
    public const int LineRenderer = 66;
    public const int LinkedBeltId = 67;
    public const int Cooldown = 68;
    public const int CooldownLeft = 69;
    public const int CooldownUp = 70;
    public const int AddCurrencyEffect = 71;
    public const int AddPointsEffect = 72;
    public const int DamageEffect = 73;
    public const int DamageReflection = 74;
    public const int Effect = 75;
    public const int EffectSetup = 76;
    public const int EffectValue = 77;
    public const int HealEffect = 78;
    public const int ProducerId = 79;
    public const int TapEffect = 80;
    public const int TargetId = 81;
    public const int VerticalForceEffect = 82;
    public const int CollectEggVisualEffect = 83;
    public const int ProcessedVisualEffect = 84;
    public const int TapVisualEffect = 85;
    public const int VisualEffect = 86;
    public const int VisualEffectConfig = 87;
    public const int VisualEffectEffectValue = 88;
    public const int VisualEffectProducerId = 89;
    public const int VisualEffectTargetId = 90;
    public const int Egg = 91;
    public const int EggCurrentSpawnTime = 92;
    public const int EggLifeTime = 93;
    public const int EggMaxSpawnTime = 94;
    public const int EggSpawnActive = 95;
    public const int EnchantTypeId = 96;
    public const int ExplosiveEnchant = 97;
    public const int GameResource = 98;
    public const int ResourceValue = 99;
    public const int FollowMouseX = 100;
    public const int FollowMouseXY = 101;
    public const int FollowMouseY = 102;
    public const int Grabable = 103;
    public const int Grabed = 104;
    public const int Placed = 105;
    public const int ActiveCell = 106;
    public const int ActiveCellProcessed = 107;
    public const int CellFiller = 108;
    public const int CellGridCoordinates = 109;
    public const int GridCell = 110;
    public const int InteractableCell = 111;
    public const int LinkedCellId = 112;
    public const int PlayerCell = 113;
    public const int ReferenceCell = 114;
    public const int Grid = 115;
    public const int GridRows = 116;
    public const int LinkedGridId = 117;
    public const int PlayerGrid = 118;
    public const int PlayerGridBuildRequest = 119;
    public const int ReferenceGrid = 120;
    public const int ReferenceGridBuildRequest = 121;
    public const int Item = 122;
    public const int ItemTypeId = 123;
    public const int CurrentTimer = 124;
    public const int LevelTimer = 125;
    public const int MaxTimer = 126;
    public const int TimerCompleted = 127;
    public const int CurrentHP = 128;
    public const int Dead = 129;
    public const int HealthBar = 130;
    public const int MaxHP = 131;
    public const int ProcessingDeath = 132;
    public const int Direction = 133;
    public const int FullRotationAlignedAlongDirection = 134;
    public const int MovableByInput = 135;
    public const int MoveInCameraBounds = 136;
    public const int MovementAvailable = 137;
    public const int MoveWithNoBounds = 138;
    public const int Moving = 139;
    public const int RotationAlignedAlongDirection = 140;
    public const int RotationRandomDirection = 141;
    public const int RotationSpeed = 142;
    public const int Speed = 143;
    public const int TurnedAlongDirection = 144;
    public const int ObjectFromPool = 145;
    public const int Reserved = 146;
    public const int BoxCollider2D = 147;
    public const int BoxCollider = 148;
    public const int ForceApplier = 149;
    public const int ForceProducerId = 150;
    public const int ForceTargetId = 151;
    public const int PhysicsBody = 152;
    public const int PhysicsForce = 153;
    public const int Processed = 154;
    public const int Rigidbody2D = 155;
    public const int Velocity = 156;
    public const int CurrenScoreContainer = 157;
    public const int MaxScoreContainer = 158;
    public const int ScoreContains = 159;
    public const int OnShelf = 160;
    public const int Shelf = 161;
    public const int Affected = 162;
    public const int Applied = 163;
    public const int ApplierStatusLink = 164;
    public const int Duration = 165;
    public const int Explosive = 166;
    public const int Freeze = 167;
    public const int Period = 168;
    public const int Poison = 169;
    public const int Status = 170;
    public const int StatusTypeId = 171;
    public const int TimeLeft = 172;
    public const int TimeSinceLastTick = 173;
    public const int Unapplied = 174;
    public const int Tapable = 175;
    public const int TapDepleted = 176;
    public const int Taped = 177;
    public const int TapEffectConfig = 178;
    public const int TapRapeatableTimes = 179;
    public const int TapsRequired = 180;
    public const int TapVisualEffectConfig = 181;
    public const int TotalTapsRequired = 182;
    public const int CollectingTargetsContinuously = 183;
    public const int CollectTargetsInterval = 184;
    public const int CollectTargetsTimer = 185;
    public const int LayerMask = 186;
    public const int ProcessedTargets = 187;
    public const int Radius = 188;
    public const int Reached = 189;
    public const int ReadyToCollectTargets = 190;
    public const int TargetsBuffer = 191;
    public const int Zone = 192;
    public const int ZoneHeight = 193;
    public const int ZonePercent = 194;
    public const int ZonePlaced = 195;
    public const int ZoneTypeId = 196;
    public const int ZoneWidth = 197;
    public const int View = 198;
    public const int ViewPrefab = 199;
    public const int ViewPath = 200;
    public const int ViewProcessed = 201;
    public const int RequireSkinApplication = 202;

    public const int TotalComponents = 203;

    public static readonly string[] componentNames = {
        "Destructed",
        "Persistent",
        "SelfDestructTimer",
        "ConveyourBeltItem",
        "CurrentLerp",
        "Distance",
        "EndPoint",
        "ItemSpacing",
        "ReachedEnd",
        "StartPoint",
        "AbilityId",
        "CollisionEffect",
        "GarlicAuraAbility",
        "OrbitingMushroomAbility",
        "ParentAbility",
        "RecreatedOnUpgrade",
        "UpgradeRequest",
        "VegetableBoltAbility",
        "Armament",
        "EffectSetups",
        "FollowingProducer",
        "StatusSetups",
        "TargetLimit",
        "Background",
        "Canvas",
        "Bucket",
        "Building",
        "BuildingTypeId",
        "CurBuildingStorage",
        "MaxBuildingStorage",
        "ProducingItemsTypeId",
        "ProducingSpeed",
        "RecievingItemsTypeId",
        "BorderCamera",
        "Camera",
        "EdgeCollider2D",
        "MainCamera",
        "Card",
        "CardBackisActive",
        "CardSpriteRenderer",
        "CardTypeId",
        "FaceUp",
        "Flipping",
        "ReadyToCheck",
        "RequireSpriteSet",
        "ReturningCard",
        "BaseStats",
        "StatChange",
        "StatModifiers",
        "Chicken",
        "Collectable",
        "Collected",
        "CollectEffect",
        "Active",
        "Damage",
        "EntityLink",
        "Id",
        "Inactive",
        "Initialized",
        "MeshRenderer",
        "SpriteRenderer",
        "Transform",
        "WorldPosition",
        "ConveyorBelt",
        "ConveyorBeltSpeed",
        "ConveyourItemsIds",
        "LineRenderer",
        "LinkedBeltId",
        "Cooldown",
        "CooldownLeft",
        "CooldownUp",
        "AddCurrencyEffect",
        "AddPointsEffect",
        "DamageEffect",
        "DamageReflection",
        "Effect",
        "EffectSetup",
        "EffectValue",
        "HealEffect",
        "ProducerId",
        "TapEffect",
        "TargetId",
        "VerticalForceEffect",
        "CollectEggVisualEffect",
        "ProcessedVisualEffect",
        "TapVisualEffect",
        "VisualEffect",
        "VisualEffectConfig",
        "VisualEffectEffectValue",
        "VisualEffectProducerId",
        "VisualEffectTargetId",
        "Egg",
        "EggCurrentSpawnTime",
        "EggLifeTime",
        "EggMaxSpawnTime",
        "EggSpawnActive",
        "EnchantTypeId",
        "ExplosiveEnchant",
        "GameResource",
        "ResourceValue",
        "FollowMouseX",
        "FollowMouseXY",
        "FollowMouseY",
        "Grabable",
        "Grabed",
        "Placed",
        "ActiveCell",
        "ActiveCellProcessed",
        "CellFiller",
        "CellGridCoordinates",
        "GridCell",
        "InteractableCell",
        "LinkedCellId",
        "PlayerCell",
        "ReferenceCell",
        "Grid",
        "GridRows",
        "LinkedGridId",
        "PlayerGrid",
        "PlayerGridBuildRequest",
        "ReferenceGrid",
        "ReferenceGridBuildRequest",
        "Item",
        "ItemTypeId",
        "CurrentTimer",
        "LevelTimer",
        "MaxTimer",
        "TimerCompleted",
        "CurrentHP",
        "Dead",
        "HealthBar",
        "MaxHP",
        "ProcessingDeath",
        "Direction",
        "FullRotationAlignedAlongDirection",
        "MovableByInput",
        "MoveInCameraBounds",
        "MovementAvailable",
        "MoveWithNoBounds",
        "Moving",
        "RotationAlignedAlongDirection",
        "RotationRandomDirection",
        "RotationSpeed",
        "Speed",
        "TurnedAlongDirection",
        "ObjectFromPool",
        "Reserved",
        "BoxCollider2D",
        "BoxCollider",
        "ForceApplier",
        "ForceProducerId",
        "ForceTargetId",
        "PhysicsBody",
        "PhysicsForce",
        "Processed",
        "Rigidbody2D",
        "Velocity",
        "CurrenScoreContainer",
        "MaxScoreContainer",
        "ScoreContains",
        "OnShelf",
        "Shelf",
        "Affected",
        "Applied",
        "ApplierStatusLink",
        "Duration",
        "Explosive",
        "Freeze",
        "Period",
        "Poison",
        "Status",
        "StatusTypeId",
        "TimeLeft",
        "TimeSinceLastTick",
        "Unapplied",
        "Tapable",
        "TapDepleted",
        "Taped",
        "TapEffectConfig",
        "TapRapeatableTimes",
        "TapsRequired",
        "TapVisualEffectConfig",
        "TotalTapsRequired",
        "CollectingTargetsContinuously",
        "CollectTargetsInterval",
        "CollectTargetsTimer",
        "LayerMask",
        "ProcessedTargets",
        "Radius",
        "Reached",
        "ReadyToCollectTargets",
        "TargetsBuffer",
        "Zone",
        "ZoneHeight",
        "ZonePercent",
        "ZonePlaced",
        "ZoneTypeId",
        "ZoneWidth",
        "View",
        "ViewPrefab",
        "ViewPath",
        "ViewProcessed",
        "RequireSkinApplication"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Code.Common.Destructed),
        typeof(Code.Common.PersistentComponent),
        typeof(Code.Common.SelfDestructTimer),
        typeof(Code.ConveyourBeltItem.ConveyourBeltItem),
        typeof(Code.ConveyourBeltItem.CurrentLerp),
        typeof(Code.ConveyourBeltItem.Distance),
        typeof(Code.ConveyourBeltItem.EndPoint),
        typeof(Code.ConveyourBeltItem.ItemSpacing),
        typeof(Code.ConveyourBeltItem.ReachedEnd),
        typeof(Code.ConveyourBeltItem.StartPoint),
        typeof(Code.Gameplay.Abilities.AbilityIdComponent),
        typeof(Code.Gameplay.Abilities.CollisionEffectComponent),
        typeof(Code.Gameplay.Abilities.GarlicAuraAbility),
        typeof(Code.Gameplay.Abilities.OrbitingMushroomAbility),
        typeof(Code.Gameplay.Abilities.ParentAbility),
        typeof(Code.Gameplay.Abilities.RecreatedOnUpgrade),
        typeof(Code.Gameplay.Abilities.UpgradeRequest),
        typeof(Code.Gameplay.Abilities.VegetableBoltAbility),
        typeof(Code.Gameplay.Armaments.Armament),
        typeof(Code.Gameplay.Armaments.EffectSetups),
        typeof(Code.Gameplay.Armaments.FollowingProducer),
        typeof(Code.Gameplay.Armaments.StatusSetups),
        typeof(Code.Gameplay.Armaments.TargetLimit),
        typeof(Code.Gameplay.Backgrounds.Background),
        typeof(Code.Gameplay.Backgrounds.CanvasComponent),
        typeof(Code.Gameplay.Bucket.Bucket),
        typeof(Code.Gameplay.Buildings.Building),
        typeof(Code.Gameplay.Buildings.BuildingTypeIdComponent),
        typeof(Code.Gameplay.Buildings.CurBuildingStorage),
        typeof(Code.Gameplay.Buildings.MaxBuildingStorage),
        typeof(Code.Gameplay.Buildings.ProducingItemsTypeId),
        typeof(Code.Gameplay.Buildings.ProducingSpeed),
        typeof(Code.Gameplay.Buildings.RecievingItemsTypeId),
        typeof(Code.Gameplay.Cameras.BorderCamera),
        typeof(Code.Gameplay.Cameras.CameraComponent),
        typeof(Code.Gameplay.Cameras.EdgeCollider2DComponent),
        typeof(Code.Gameplay.Cameras.MainCamera),
        typeof(Code.Gameplay.Cards.Card),
        typeof(Code.Gameplay.Cards.CardBackisActive),
        typeof(Code.Gameplay.Cards.CardSpriteRenderer),
        typeof(Code.Gameplay.Cards.CardTypeIdComponent),
        typeof(Code.Gameplay.Cards.FaceUp),
        typeof(Code.Gameplay.Cards.Flipping),
        typeof(Code.Gameplay.Cards.ReadyToCheck),
        typeof(Code.Gameplay.Cards.RequireSpriteSet),
        typeof(Code.Gameplay.Cards.ReturningCard),
        typeof(Code.Gameplay.CharacterStats.BaseStats),
        typeof(Code.Gameplay.CharacterStats.StatChange),
        typeof(Code.Gameplay.CharacterStats.StatModifiers),
        typeof(Code.Gameplay.Chicken.Chicken),
        typeof(Code.Gameplay.Collection.Collectable),
        typeof(Code.Gameplay.Collection.Collected),
        typeof(Code.Gameplay.Collection.CollectEffect),
        typeof(Code.Gameplay.Common.Active),
        typeof(Code.Gameplay.Common.Damage),
        typeof(Code.Gameplay.Common.EntityLink),
        typeof(Code.Gameplay.Common.Id),
        typeof(Code.Gameplay.Common.Inactive),
        typeof(Code.Gameplay.Common.InitializedComponent),
        typeof(Code.Gameplay.Common.MeshRendererComponent),
        typeof(Code.Gameplay.Common.SpriteRendererComponent),
        typeof(Code.Gameplay.Common.TransformComponent),
        typeof(Code.Gameplay.Common.WorldPosition),
        typeof(Code.Gameplay.ConveyorBelt.ConveyorBelt),
        typeof(Code.Gameplay.ConveyorBelt.ConveyorBeltSpeed),
        typeof(Code.Gameplay.ConveyorBelt.ConveyourItemsIds),
        typeof(Code.Gameplay.ConveyorBelt.LineRendererComponent),
        typeof(Code.Gameplay.ConveyorBelt.LinkedBeltId),
        typeof(Code.Gameplay.Cooldowns.Cooldown),
        typeof(Code.Gameplay.Cooldowns.CooldownLeft),
        typeof(Code.Gameplay.Cooldowns.CooldownUp),
        typeof(Code.Gameplay.Effects.AddCurrencyEffect),
        typeof(Code.Gameplay.Effects.AddPointsEffect),
        typeof(Code.Gameplay.Effects.DamageEffect),
        typeof(Code.Gameplay.Effects.DamageReflectionComponent),
        typeof(Code.Gameplay.Effects.Effect),
        typeof(Code.Gameplay.Effects.EffectSetupComponent),
        typeof(Code.Gameplay.Effects.EffectValue),
        typeof(Code.Gameplay.Effects.HealEffect),
        typeof(Code.Gameplay.Effects.ProducerId),
        typeof(Code.Gameplay.Effects.TapEffect),
        typeof(Code.Gameplay.Effects.TargetId),
        typeof(Code.Gameplay.Effects.VerticalForceEffect),
        typeof(Code.Gameplay.EffectsVisual.CollectEggVisualEffect),
        typeof(Code.Gameplay.EffectsVisual.ProcessedVisualEffect),
        typeof(Code.Gameplay.EffectsVisual.TapVisualEffect),
        typeof(Code.Gameplay.EffectsVisual.VisualEffect),
        typeof(Code.Gameplay.EffectsVisual.VisualEffectConfigComponent),
        typeof(Code.Gameplay.EffectsVisual.VisualEffectEffectValue),
        typeof(Code.Gameplay.EffectsVisual.VisualEffectProducerId),
        typeof(Code.Gameplay.EffectsVisual.VisualEffectTargetId),
        typeof(Code.Gameplay.Eggs.Egg),
        typeof(Code.Gameplay.Eggs.EggCurrentSpawnTime),
        typeof(Code.Gameplay.Eggs.EggLifeTime),
        typeof(Code.Gameplay.Eggs.EggMaxSpawnTime),
        typeof(Code.Gameplay.Eggs.EggSpawnActive),
        typeof(Code.Gameplay.Enchants.EnchantTypeIdComponent),
        typeof(Code.Gameplay.Enchants.ExplosiveEnchant),
        typeof(Code.Gameplay.GameResource.GameResource),
        typeof(Code.Gameplay.GameResource.ResourceValue),
        typeof(Code.Gameplay.Grabs.FollowMouseX),
        typeof(Code.Gameplay.Grabs.FollowMouseXY),
        typeof(Code.Gameplay.Grabs.FollowMouseY),
        typeof(Code.Gameplay.Grabs.Grabable),
        typeof(Code.Gameplay.Grabs.Grabed),
        typeof(Code.Gameplay.Grabs.Placed),
        typeof(Code.Gameplay.GridCells.ActiveCell),
        typeof(Code.Gameplay.GridCells.ActiveCellProcessed),
        typeof(Code.Gameplay.GridCells.CellFiller),
        typeof(Code.Gameplay.GridCells.CellGridCoordinates),
        typeof(Code.Gameplay.GridCells.GridCell),
        typeof(Code.Gameplay.GridCells.InteractableCell),
        typeof(Code.Gameplay.GridCells.LinkedCellId),
        typeof(Code.Gameplay.GridCells.PlayerCell),
        typeof(Code.Gameplay.GridCells.ReferenceCell),
        typeof(Code.Gameplay.Grids.Grid),
        typeof(Code.Gameplay.Grids.GridRowsComponent),
        typeof(Code.Gameplay.Grids.LinkedGridId),
        typeof(Code.Gameplay.Grids.PlayerGrid),
        typeof(Code.Gameplay.Grids.PlayerGridBuildRequest),
        typeof(Code.Gameplay.Grids.ReferenceGrid),
        typeof(Code.Gameplay.Grids.ReferenceGridBuildRequest),
        typeof(Code.Gameplay.Items.Item),
        typeof(Code.Gameplay.Items.ItemTypeIdComponent),
        typeof(Code.Gameplay.LevelTimer.CurrentTimer),
        typeof(Code.Gameplay.LevelTimer.LevelTimer),
        typeof(Code.Gameplay.LevelTimer.MaxTimer),
        typeof(Code.Gameplay.LevelTimer.TimerCompleted),
        typeof(Code.Gameplay.LifeTime.CurrentHP),
        typeof(Code.Gameplay.LifeTime.Dead),
        typeof(Code.Gameplay.LifeTime.HealthBar),
        typeof(Code.Gameplay.LifeTime.MaxHP),
        typeof(Code.Gameplay.LifeTime.ProcessingDeath),
        typeof(Code.Gameplay.Movement.Direction),
        typeof(Code.Gameplay.Movement.FullRotationAlignedAlongDirection),
        typeof(Code.Gameplay.Movement.MovableByInput),
        typeof(Code.Gameplay.Movement.MoveInCameraBounds),
        typeof(Code.Gameplay.Movement.MovementAvailable),
        typeof(Code.Gameplay.Movement.MoveWithNoBounds),
        typeof(Code.Gameplay.Movement.Moving),
        typeof(Code.Gameplay.Movement.RotationAlignedAlongDirection),
        typeof(Code.Gameplay.Movement.RotationRandomDirection),
        typeof(Code.Gameplay.Movement.RotationSpeed),
        typeof(Code.Gameplay.Movement.Speed),
        typeof(Code.Gameplay.Movement.TurnedAlongDirection),
        typeof(Code.Gameplay.Objects.ObjectFromPool),
        typeof(Code.Gameplay.Objects.Reserved),
        typeof(Code.Gameplay.Physics.BoxCollider2DComponent),
        typeof(Code.Gameplay.Physics.BoxColliderComponent),
        typeof(Code.Gameplay.Physics.ForceApplier),
        typeof(Code.Gameplay.Physics.ForceProducerId),
        typeof(Code.Gameplay.Physics.ForceTargetId),
        typeof(Code.Gameplay.Physics.PhysicsBody),
        typeof(Code.Gameplay.Physics.PhysicsForce),
        typeof(Code.Gameplay.Physics.Processed),
        typeof(Code.Gameplay.Physics.Rigidbody2DComponent),
        typeof(Code.Gameplay.Physics.Velocity),
        typeof(Code.Gameplay.Score.CurrenScoreContainer),
        typeof(Code.Gameplay.Score.MaxScoreContainer),
        typeof(Code.Gameplay.Score.ScoreContains),
        typeof(Code.Gameplay.Shelfs.OnShelf),
        typeof(Code.Gameplay.Shelfs.Shelf),
        typeof(Code.Gameplay.Statuses.Affected),
        typeof(Code.Gameplay.Statuses.Applied),
        typeof(Code.Gameplay.Statuses.ApplierStatusLink),
        typeof(Code.Gameplay.Statuses.Duration),
        typeof(Code.Gameplay.Statuses.Explosive),
        typeof(Code.Gameplay.Statuses.Freeze),
        typeof(Code.Gameplay.Statuses.Period),
        typeof(Code.Gameplay.Statuses.Poison),
        typeof(Code.Gameplay.Statuses.Status),
        typeof(Code.Gameplay.Statuses.StatusTypeIdComponent),
        typeof(Code.Gameplay.Statuses.TimeLeft),
        typeof(Code.Gameplay.Statuses.TimeSinceLastTick),
        typeof(Code.Gameplay.Statuses.Unapplied),
        typeof(Code.Gameplay.Taps.Tapable),
        typeof(Code.Gameplay.Taps.TapDepleted),
        typeof(Code.Gameplay.Taps.Taped),
        typeof(Code.Gameplay.Taps.TapEffectConfig),
        typeof(Code.Gameplay.Taps.TapRapeatableTimes),
        typeof(Code.Gameplay.Taps.TapsRequired),
        typeof(Code.Gameplay.Taps.TapVisualEffectConfigComponent),
        typeof(Code.Gameplay.Taps.TotalTapsRequired),
        typeof(Code.Gameplay.TargetCollection.CollectingTargetsContinuously),
        typeof(Code.Gameplay.TargetCollection.CollectTargetsInterval),
        typeof(Code.Gameplay.TargetCollection.CollectTargetsTimer),
        typeof(Code.Gameplay.TargetCollection.LayerMask),
        typeof(Code.Gameplay.TargetCollection.ProcessedTargets),
        typeof(Code.Gameplay.TargetCollection.Radius),
        typeof(Code.Gameplay.TargetCollection.Reached),
        typeof(Code.Gameplay.TargetCollection.ReadyToCollectTargets),
        typeof(Code.Gameplay.TargetCollection.TargetsBuffer),
        typeof(Code.Gameplay.Zones.Zone),
        typeof(Code.Gameplay.Zones.ZoneHeight),
        typeof(Code.Gameplay.Zones.ZonePercent),
        typeof(Code.Gameplay.Zones.ZonePlaced),
        typeof(Code.Gameplay.Zones.ZoneTypeIdComponent),
        typeof(Code.Gameplay.Zones.ZoneWidth),
        typeof(Code.Infrastructure.EntityViews.Code.Infrastructure.EntityViews.GameViews.View),
        typeof(Code.Infrastructure.EntityViews.Code.Infrastructure.EntityViews.GameViews.ViewPrefab),
        typeof(Code.Infrastructure.EntityViews.ViewPath),
        typeof(Code.Infrastructure.EntityViews.ViewProcessed),
        typeof(Code.Meta.Skins.RequireSkinApplication)
    };
}
